version: '3.8'

services:
  # Databases
  postgres-product:
    image: postgres:15
    environment:
      POSTGRES_DB: product_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_product_data:/var/lib/postgresql/data
    networks:
      - warehouse-network

  postgres-inventory:
    image: postgres:15
    environment:
      POSTGRES_DB: inventory_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_inventory_data:/var/lib/postgresql/data
    networks:
      - warehouse-network

  postgres-order:
    image: postgres:15
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - postgres_order_data:/var/lib/postgresql/data
    networks:
      - warehouse-network

  postgres-customer:
    image: postgres:15
    environment:
      POSTGRES_DB: customer_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    volumes:
      - postgres_customer_data:/var/lib/postgresql/data
    networks:
      - warehouse-network

  postgres-reporting:
    image: postgres:15
    environment:
      POSTGRES_DB: reporting_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5436:5432"
    volumes:
      - postgres_reporting_data:/var/lib/postgresql/data
    networks:
      - warehouse-network

  postgres-alert:
    image: postgres:15
    environment:
      POSTGRES_DB: alert_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5437:5432"
    volumes:
      - postgres_alert_data:/var/lib/postgresql/data
    networks:
      - warehouse-network

  postgres-payment:
    image: postgres:15
    environment:
      POSTGRES_DB: payment_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5438:5432"
    volumes:
      - postgres_payment_data:/var/lib/postgresql/data
    networks:
      - warehouse-network

  postgres-notification:
    image: postgres:15
    environment:
      POSTGRES_DB: notification_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5439:5432"
    volumes:
      - postgres_notification_data:/var/lib/postgresql/data
    networks:
      - warehouse-network

  # Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - warehouse-network

  # Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - warehouse-network

  # API Gateway (ASP.NET Core with Ocelot)
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway-dotnet/Dockerfile
    ports:
      - "5000:80"
      - "5001:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - JWT_SECRET=your-jwt-secret-key-here-make-it-long-and-secure
      - JWT_ISSUER=WarehouseManagement
      - JWT_AUDIENCE=WarehouseManagement
    depends_on:
      - product-service
      - inventory-service
      - order-service
      - customer-service
      - reporting-service
      - alert-service
      - payment-service
      - notification-service
    networks:
      - warehouse-network

  # Microservices (ASP.NET Core)
  product-service:
    build:
      context: .
      dockerfile: services/product-service/Dockerfile
    ports:
      - "5101:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres-product;Port=5432;Database=product_db;Username=postgres;Password=password
      - RabbitMQ__ConnectionString=amqp://admin:password@rabbitmq:5672
      - JWT__Secret=your-jwt-secret-key-here-make-it-long-and-secure
      - JWT__Issuer=WarehouseManagement
      - JWT__Audience=WarehouseManagement
    depends_on:
      - postgres-product
      - rabbitmq
    networks:
      - warehouse-network

  inventory-service:
    build:
      context: .
      dockerfile: services/inventory-service/Dockerfile
    ports:
      - "5102:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres-inventory;Port=5432;Database=inventory_db;Username=postgres;Password=password
      - RabbitMQ__ConnectionString=amqp://admin:password@rabbitmq:5672
      - Redis__ConnectionString=redis:6379
      - JWT__Secret=your-jwt-secret-key-here-make-it-long-and-secure
      - JWT__Issuer=WarehouseManagement
      - JWT__Audience=WarehouseManagement
    depends_on:
      - postgres-inventory
      - rabbitmq
      - redis
    networks:
      - warehouse-network

  order-service:
    build:
      context: .
      dockerfile: services/order-service/Dockerfile
    ports:
      - "5103:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres-order;Port=5432;Database=order_db;Username=postgres;Password=password
      - RabbitMQ__ConnectionString=amqp://admin:password@rabbitmq:5672
      - JWT__Secret=your-jwt-secret-key-here-make-it-long-and-secure
      - JWT__Issuer=WarehouseManagement
      - JWT__Audience=WarehouseManagement
    depends_on:
      - postgres-order
      - rabbitmq
    networks:
      - warehouse-network

  customer-service:
    build:
      context: .
      dockerfile: services/customer-service/Dockerfile
    ports:
      - "5104:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres-customer;Port=5432;Database=customer_db;Username=postgres;Password=password
      - RabbitMQ__ConnectionString=amqp://admin:password@rabbitmq:5672
      - JWT__Secret=your-jwt-secret-key-here-make-it-long-and-secure
      - JWT__Issuer=WarehouseManagement
      - JWT__Audience=WarehouseManagement
    depends_on:
      - postgres-customer
      - rabbitmq
    networks:
      - warehouse-network

  reporting-service:
    build:
      context: .
      dockerfile: services/reporting-service/Dockerfile
    ports:
      - "5105:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres-reporting;Port=5432;Database=reporting_db;Username=postgres;Password=password
      - RabbitMQ__ConnectionString=amqp://admin:password@rabbitmq:5672
      - JWT__Secret=your-jwt-secret-key-here-make-it-long-and-secure
      - JWT__Issuer=WarehouseManagement
      - JWT__Audience=WarehouseManagement
    depends_on:
      - postgres-reporting
      - rabbitmq
    networks:
      - warehouse-network

  alert-service:
    build:
      context: .
      dockerfile: services/alert-service/Dockerfile
    ports:
      - "5106:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres-alert;Port=5432;Database=alert_db;Username=postgres;Password=password
      - RabbitMQ__ConnectionString=amqp://admin:password@rabbitmq:5672
      - SMTP__Host=smtp.gmail.com
      - SMTP__Port=587
      - SMTP__Username=your-email@gmail.com
      - SMTP__Password=your-app-password
      - JWT__Secret=your-jwt-secret-key-here-make-it-long-and-secure
      - JWT__Issuer=WarehouseManagement
      - JWT__Audience=WarehouseManagement
    depends_on:
      - postgres-alert
      - rabbitmq
    networks:
      - warehouse-network

  payment-service:
    build:
      context: .
      dockerfile: services/payment-service/Dockerfile
    ports:
      - "5107:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres-payment;Port=5432;Database=payment_db;Username=postgres;Password=password
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=admin
      - RabbitMQ__Password=password
      - JWT__Key=your-super-secret-key-that-is-at-least-32-characters-long
      - JWT__Issuer=WarehouseManagement
      - JWT__Audience=WarehouseManagement
    depends_on:
      - postgres-payment
      - rabbitmq
    networks:
      - warehouse-network

  notification-service:
    build:
      context: .
      dockerfile: services/notification-service/Dockerfile
    ports:
      - "5108:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres-notification;Port=5432;Database=notification_db;Username=postgres;Password=password
      - RabbitMQ__HostName=rabbitmq
      - RabbitMQ__Port=5672
      - RabbitMQ__UserName=admin
      - RabbitMQ__Password=password
      - Email__SmtpHost=smtp.gmail.com
      - Email__SmtpPort=587
      - Email__FromName=Warehouse Management
      - Email__FromAddress=noreply@warehouse.com
      - Email__Username=your-email@gmail.com
      - Email__Password=your-app-password
      - Twilio__AccountSid=your-twilio-account-sid
      - Twilio__AuthToken=your-twilio-auth-token
      - Twilio__FromNumber=+1234567890
      - JWT__Key=your-super-secret-key-that-is-at-least-32-characters-long
      - JWT__Issuer=WarehouseManagement
      - JWT__Audience=WarehouseManagement
    depends_on:
      - postgres-notification
      - rabbitmq
    networks:
      - warehouse-network

volumes:
  postgres_product_data:
  postgres_inventory_data:
  postgres_order_data:
  postgres_customer_data:
  postgres_reporting_data:
  postgres_alert_data:
  postgres_payment_data:
  postgres_notification_data:
  rabbitmq_data:
  redis_data:

networks:
  warehouse-network:
    driver: bridge
