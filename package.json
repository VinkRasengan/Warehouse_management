{
  "name": "warehouse-management-microservices",
  "version": "1.0.0",
  "description": "Microservices-based warehouse management system",
  "main": "index.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:gateway\" \"npm run dev:product\" \"npm run dev:inventory\" \"npm run dev:order\" \"npm run dev:customer\" \"npm run dev:reporting\" \"npm run dev:alert\"",
    "dev:gateway": "cd api-gateway && npm run dev",
    "dev:product": "cd services/product-service && npm run dev",
    "dev:inventory": "cd services/inventory-service && npm run dev",
    "dev:order": "cd services/order-service && npm run dev",
    "dev:customer": "cd services/customer-service && npm run dev",
    "dev:reporting": "cd services/reporting-service && npm run dev",
    "dev:alert": "cd services/alert-service && npm run dev",
    "build": "npm run build:gateway && npm run build:services",
    "build:gateway": "cd api-gateway && npm run build",
    "build:services": "npm run build:product && npm run build:inventory && npm run build:order && npm run build:customer && npm run build:reporting && npm run build:alert",
    "build:product": "cd services/product-service && npm run build",
    "build:inventory": "cd services/inventory-service && npm run build",
    "build:order": "cd services/order-service && npm run build",
    "build:customer": "cd services/customer-service && npm run build",
    "build:reporting": "cd services/reporting-service && npm run build",
    "build:alert": "cd services/alert-service && npm run build",
    "build:docker": "docker-compose build",
    "test": "npm run test:gateway && npm run test:services",
    "test:gateway": "cd api-gateway && npm test",
    "test:services": "npm run test:product && npm run test:inventory && npm run test:order && npm run test:customer && npm run test:reporting && npm run test:alert",
    "test:product": "cd services/product-service && npm test",
    "test:inventory": "cd services/inventory-service && npm test",
    "test:order": "cd services/order-service && npm test",
    "test:customer": "cd services/customer-service && npm test",
    "test:reporting": "cd services/reporting-service && npm test",
    "test:alert": "cd services/alert-service && npm test",
    "lint": "eslint . --ext .ts,.js",
    "lint:fix": "eslint . --ext .ts,.js --fix",
    "install:all": "npm install && npm run install:gateway && npm run install:services",
    "install:gateway": "cd api-gateway && npm install",
    "install:services": "npm run install:product && npm run install:inventory && npm run install:order && npm run install:customer && npm run install:reporting && npm run install:alert",
    "install:product": "cd services/product-service && npm install",
    "install:inventory": "cd services/inventory-service && npm install",
    "install:order": "cd services/order-service && npm install",
    "install:customer": "cd services/customer-service && npm install",
    "install:reporting": "cd services/reporting-service && npm install",
    "install:alert": "cd services/alert-service && npm install"
  },
  "keywords": [
    "microservices",
    "warehouse",
    "management",
    "nodejs",
    "typescript",
    "kubernetes"
  ],
  "author": "Warehouse Management Team",
  "license": "MIT",
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "concurrently": "^8.2.0",
    "eslint": "^8.45.0",
    "typescript": "^5.1.0"
  },
  "workspaces": [
    "api-gateway",
    "services/*",
    "shared/*"
  ]
}
