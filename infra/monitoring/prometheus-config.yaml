apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "warehouse_rules.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      # Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      # Kubernetes API server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      # Kubernetes pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # Warehouse Management Services
      - job_name: 'warehouse-api-gateway'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - warehouse-staging
                - warehouse-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: api-gateway-service
          - source_labels: [__meta_kubernetes_namespace]
            target_label: environment
          - source_labels: [__address__]
            target_label: __address__
            replacement: $1:80

      - job_name: 'warehouse-product-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - warehouse-staging
                - warehouse-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: product-service
          - source_labels: [__meta_kubernetes_namespace]
            target_label: environment

      - job_name: 'warehouse-inventory-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - warehouse-staging
                - warehouse-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: inventory-service
          - source_labels: [__meta_kubernetes_namespace]
            target_label: environment

      - job_name: 'warehouse-order-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - warehouse-staging
                - warehouse-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: order-service
          - source_labels: [__meta_kubernetes_namespace]
            target_label: environment

      - job_name: 'warehouse-customer-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - warehouse-staging
                - warehouse-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: customer-service
          - source_labels: [__meta_kubernetes_namespace]
            target_label: environment

      - job_name: 'warehouse-payment-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - warehouse-staging
                - warehouse-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: payment-service
          - source_labels: [__meta_kubernetes_namespace]
            target_label: environment

      - job_name: 'warehouse-notification-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - warehouse-staging
                - warehouse-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: notification-service
          - source_labels: [__meta_kubernetes_namespace]
            target_label: environment

      - job_name: 'warehouse-reporting-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - warehouse-staging
                - warehouse-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: reporting-service
          - source_labels: [__meta_kubernetes_namespace]
            target_label: environment

      - job_name: 'warehouse-alert-service'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - warehouse-staging
                - warehouse-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: alert-service
          - source_labels: [__meta_kubernetes_namespace]
            target_label: environment

      # PostgreSQL
      - job_name: 'postgresql'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - warehouse-staging
                - warehouse-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: postgres-.*-service

      # RabbitMQ
      - job_name: 'rabbitmq'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - warehouse-staging
                - warehouse-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: rabbitmq-service

      # Redis
      - job_name: 'redis'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - warehouse-staging
                - warehouse-production
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: redis-service

  warehouse_rules.yml: |
    groups:
      - name: warehouse.rules
        rules:
          # High error rate
          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "High error rate detected"
              description: "Error rate is {{ $value }} for {{ $labels.job }}"

          # High response time
          - alert: HighResponseTime
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 1
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High response time detected"
              description: "95th percentile response time is {{ $value }}s for {{ $labels.job }}"

          # Service down
          - alert: ServiceDown
            expr: up == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Service is down"
              description: "{{ $labels.job }} has been down for more than 1 minute"

          # High CPU usage
          - alert: HighCPUUsage
            expr: rate(container_cpu_usage_seconds_total[5m]) > 0.8
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: "High CPU usage"
              description: "CPU usage is {{ $value }} for {{ $labels.pod }}"

          # High memory usage
          - alert: HighMemoryUsage
            expr: container_memory_usage_bytes / container_spec_memory_limit_bytes > 0.8
            for: 10m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage"
              description: "Memory usage is {{ $value }} for {{ $labels.pod }}"

          # Database connection issues
          - alert: DatabaseConnectionIssues
            expr: increase(database_connection_errors_total[5m]) > 5
            for: 2m
            labels:
              severity: critical
            annotations:
              summary: "Database connection issues"
              description: "{{ $value }} database connection errors in the last 5 minutes"

          # RabbitMQ queue size
          - alert: RabbitMQQueueSize
            expr: rabbitmq_queue_messages > 1000
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "RabbitMQ queue size is high"
              description: "Queue {{ $labels.queue }} has {{ $value }} messages"
